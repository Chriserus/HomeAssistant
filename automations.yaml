- id: '1612302802492'
  alias: Stupid water boiled
  description: ''
  trigger:
  - type: temperature
    platform: device
    device_id: 8efde03f8234cf32ed436f60aee26b61
    entity_id: sensor.kitchen_kettle_temperature
    domain: sensor
    above: 95
  condition: []
  action:
  - service: tts.google_translate_say
    data:
      message: Wotah boiled, pretty schewpid innit?
      entity_id: media_player.living_room_display
  - type: flash
    device_id: 53ebce6dac1b9ff9150a6b67e46b9b6b
    entity_id: light.kitchen_countertop
    domain: light
  mode: single
- id: '1612734173676'
  alias: Aqara Magic Cube
  description: ''
  use_blueprint:
    path: homeassistant/aqara_cube.yaml
    input:
      doubletap_face_0: []
      remote: sensor.cube_action
      shake:
      - type: turn_off
        device_id: 53ebce6dac1b9ff9150a6b67e46b9b6b
        entity_id: light.kitchen_countertop
        domain: light
      doubletap_face_1: []
      slide_face_0: []
      slide_face_1: []
      slide_face_3:
      - type: turn_on
        device_id: 53ebce6dac1b9ff9150a6b67e46b9b6b
        entity_id: light.kitchen_countertop
        domain: light
      fall:
      - type: turn_on
        device_id: 53ebce6dac1b9ff9150a6b67e46b9b6b
        entity_id: light.kitchen_countertop
        domain: light
- id: '1614469567168'
  alias: Mijia Wireless Remote Switch
  description: ''
  use_blueprint:
    path: homeassistant/xiaomi_button.yaml
    input:
      button_sensor: sensor.button_action
      remote_button_single_press:
      - type: toggle
        device_id: fe60434d65357be0b81d9d314d216022
        entity_id: light.ceiling_light
        domain: light
      remote_button_double_press:
      - device_id: cc45562d7de17090b1fa5e49510d9205
        domain: cover
        entity_id: cover.curtain_motor
        type: set_position
        position: 75
      remote_button_triple_press:
      - device_id: cc45562d7de17090b1fa5e49510d9205
        domain: cover
        entity_id: cover.curtain_motor
        type: set_position
        position: 100
- id: hacs_updates
  alias: Create a notification when there is updates pending in HACS
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
  - condition: template
    value_template: '{{ states(trigger.entity_id) != ''unknown''}}'
  - condition: template
    value_template: '{{ (states(trigger.entity_id) | float) != 0}}'
  action:
    service: persistent_notification.create
    data_template:
      title: Updates pending in HACS
      notification_id: hacs-update
      message: "{% for repo in state_attr(trigger.entity_id, 'repositories') %}\n
        \ **{{ repo.display_name }}** _{{ repo[\"installed_version\"] }}_ -> _{{ repo[\"available_version\"]
        }}_\n{% endfor %}"
- id: '1657135068032'
  alias: Motion activated light with random color - Bathroom
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 95a8bcfb169bf99e6c7b68e1aac2cc15
    entity_id: binary_sensor.motion_sensor_occupancy
    domain: binary_sensor
  condition: []
  action:
  - parallel:
    - service: light.turn_on
      data:
        rgb_color:
        - '{{states(''sensor.random_sensor_1'') | int}}'
        - '{{states(''sensor.random_sensor_2'') | int}}'
        - '{{states(''sensor.random_sensor_3'') | int}}'
      target:
        entity_id: light.bathroom_bathtub
    - if:
      - condition: time
        before: 06:00:00
        after: '22:00:00'
      then:
      - type: turn_on
        device_id: be3bf7289f133fb5ba5ec53236b84b06
        entity_id: light.bathroom_ceiling_light_nightlight
        domain: light
        brightness_pct: 100
      else:
      - type: turn_on
        device_id: be3bf7289f133fb5ba5ec53236b84b06
        entity_id: light.bathroom_ceiling_light
        domain: light
        brightness_pct: 100
      enabled: true
    enabled: true
  - wait_for_trigger:
    - type: no_motion
      platform: device
      device_id: 95a8bcfb169bf99e6c7b68e1aac2cc15
      entity_id: binary_sensor.motion_sensor_occupancy
      domain: binary_sensor
    continue_on_timeout: true
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data:
      transition: 10
    target:
      entity_id:
      - light.bathroom_ceiling_light
      - light.bathroom_bathtub
      - light.bathroom_ceiling_light_nightlight
  - condition: numeric_state
    entity_id: sensor.bathroom_weather_humidity
    attribute: humidity
    below: '60'
    enabled: false
  mode: restart
- id: '1657143679170'
  alias: Turn on the countertop light on sundown
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: 0
  condition:
  - condition: zone
    entity_id: device_tracker.chriserus_mi9
    zone: zone.home
  action:
  - service: light.turn_on
    data:
      transition: 10
    target:
      entity_id: light.kitchen_countertop
  mode: single
- id: '1657223731936'
  alias: Water leak detection - washing machine
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.washing_machine_water_leak
    attribute: water_leak
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: notify.mobile_app_chriserus_mi9
    data:
      title: Water leak
      message: Washing machine
  mode: single
- id: '1657223835891'
  alias: Water leak detection - dishwasher
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_water_leak_sensor_water_leak
    attribute: water_leak
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: notify.mobile_app_chriserus_mi9
    data:
      title: Water leak
      message: Dishwasher
  mode: single
- id: '1657224290150'
  alias: Air purifier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.left_balcony_contact
    - binary_sensor.right_balcony_contact
    attribute: contact
  - platform: event
    event_type: GOOD_MORNING
  condition: []
  action:
  - if:
    - type: is_not_open
      condition: device
      device_id: 36c720273d5cd9e386d99870c34239e7
      entity_id: binary_sensor.left_balcony_contact
      domain: binary_sensor
    - type: is_not_open
      condition: device
      device_id: 3d016ef5e95cc1fc5b3c861dd3f3e625
      entity_id: binary_sensor.right_balcony_contact
      domain: binary_sensor
    then:
    - type: turn_on
      device_id: 85437699dcefd255737e41500888d2ef
      entity_id: fan.living_room_air_purifier
      domain: fan
    else:
    - type: turn_off
      device_id: 85437699dcefd255737e41500888d2ef
      entity_id: fan.living_room_air_purifier
      domain: fan
  mode: single
- id: '1657224836881'
  alias: Leaving home
  description: ''
  trigger:
  - platform: zone
    entity_id: person.krzysztof_borowiecki
    zone: zone.home
    event: leave
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.krzysztof_borowiecki
      zone: zone.home
    enabled: true
  - parallel:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.all_lights
    - type: turn_off
      device_id: 9712a2247d23beddc88c31fe532ab6ac
      entity_id: fan.fan
      domain: fan
    - type: turn_off
      device_id: 85437699dcefd255737e41500888d2ef
      entity_id: fan.living_room_air_purifier
      domain: fan
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.krzysztof_borowiecki
      zone: zone.home
    enabled: true
  - alias: Set up variables for the actions
    variables:
      action_vacuum: '{{ ''OPEN_'' ~ context.id }}'
  - alias: Ask to vacuum the house
    service: notify.mobile_app_chriserus_mi9
    data:
      message: You left. Do you want to vacuum the house?
      data:
        actions:
        - action: '{{ action_vacuum }}'
          title: Vacuum
  - alias: Wait for a response
    wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_vacuum }}'
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_vacuum }}'
      sequence:
      - service: vacuum.start
        data: {}
        target:
          entity_id: vacuum.viomise
      - device_id: cc45562d7de17090b1fa5e49510d9205
        domain: cover
        entity_id: cover.curtain_motor
        type: set_position
        position: 100
  mode: restart
- id: '1657226108944'
  alias: New Automation
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
  condition: []
  action:
  - alias: Set up variables for the actions
    variables:
      action_open: '{{ ''OPEN_'' ~ context.id }}'
      action_close: '{{ ''CLOSE_'' ~ context.id }}'
  - alias: Ask to close or open the blinds
    service: notify.mobile_app_chriserus_mi9
    data:
      message: The blinds are half-open. Do you want to adjust this?
      data:
        actions:
        - action: '{{ action_open }}'
          title: Open
        - action: '{{ action_close }}'
          title: Close
  - alias: Wait for a response
    wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_open }}'
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_close }}'
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_open }}'
      sequence:
      - service: cover.open_cover
        target:
          entity_id: cover.curtain_motor
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_close }}'
      sequence:
      - service: cover.close_cover
        target:
          entity_id: cover.curtain_motor
        data: {}
  mode: single
- id: '1657368365390'
  alias: Arriving home
  description: ''
  trigger:
  - platform: zone
    entity_id: person.krzysztof_borowiecki
    zone: zone.home
    event: enter
  condition:
  - condition: or
    conditions:
    - condition: sun
      before: sunrise
    - condition: sun
      after: sunset
  action:
  - type: turn_on
    device_id: 53ebce6dac1b9ff9150a6b67e46b9b6b
    entity_id: light.kitchen_countertop
    domain: light
  mode: single
